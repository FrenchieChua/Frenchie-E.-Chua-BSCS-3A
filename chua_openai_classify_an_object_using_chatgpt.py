# -*- coding: utf-8 -*-
"""Chua_OpenAI- Classify an object using ChatGPT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NPWIpHHuAXC4iVjX1EFgDOe6LsVMsCOn

####**Program Description:** Introducing an intuitive and intelligent application that harnesses the power of chatGPT to classify diverse objects with utmost precision. Our app is designed to facilitate your object classification needs by saving your lists in a text file, allowing you to effortlessly load them to the program. With its human-like intelligence, our app guarantees an accurate and efficient classification of any object. Get started with our app today and enjoy a seamless and hassle-free object classification experience like never before.

**Coded by:** Frenchie E. Chua BSCS 3A
"""

"""##### Hide your open AI platform key in an environment variable"""

# Commented out IPython magic to ensure Python compatibility.
# %env OPENAI_API_KEY=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

"""##### Import the relevant libraries"""

import openai
import json

# Load categories from text file
with open("categories.txt", "r") as f:
    categories = [line.strip() for line in f.readlines()]

    # Define function to classify an object using ChatGPT
def classify_object(object_name):
    # Prompt ChatGPT to classify the object
    prompt = f"Please classify the object '{object_name}' into one of the following categories: {', '.join(categories)}."
    response = openai.Completion.create(
        engine="text-davinci-003", 
        prompt=prompt,
        max_tokens=1024,
        n=1,
        stop=None,
        temperature=0.5,
    )

    # Extract the classification from the API response
    classification = response.choices[0].text.strip()

    # Return the classification
    return classification

    # Define function to classify multiple objects
def classify_objects(object_list):
    # Classify each object and store the results in a dictionary
    classifications = {}
    for object_name in object_list:
        classification = classify_object(object_name)
        classifications[object_name] = classification

    # Return the dictionary of classifications
    return classifications

# Load objects from text file
with open("objects.txt", "r") as f:
    objects = [line.strip() for line in f.readlines()]

# Classify the objects
classifications = classify_objects(objects)

# Print the results
for object_name, classification in classifications.items():
    print(f"The object '{object_name}' was classified as '{classification}'.")
